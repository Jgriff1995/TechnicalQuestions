#!/bin/bash

# Check if a file name is provided as an argument
if [ -z "$1" ]; then
    echo "Usage: runJava <JavaFileName> (without .java extension)"
    exit 1
fi

# Get the file name from the first argument
JAVA_FILE="$1.java"

# Get the current working directory
CURRENT_DIR=$(pwd)

# Find the Java file in the current directory or subdirectories
JAVA_FILE_PATH=$(find "$CURRENT_DIR" -name "$JAVA_FILE")

# Check if the file exists
if [ -z "$JAVA_FILE_PATH" ]; then
    echo "Error: File $JAVA_FILE not found in $CURRENT_DIR or its subdirectories!"
    exit 1
fi

# Extract the directory containing the Java file
JAVA_DIR=$(dirname "$JAVA_FILE_PATH")

# Extract the package name (if any)
PACKAGE_NAME=$(grep -oP 'package\s+\K[\w.]+' "$JAVA_FILE_PATH")

# Define the output directory for .class files
TARGET_DIR="$JAVA_DIR/target"

# Compile the Java file
echo "Compiling $JAVA_FILE..."
javac -d "$TARGET_DIR" "$JAVA_FILE_PATH"

# Check if compilation was successful
if [ $? -eq 0 ]; then
    echo "Compilation successful!"

    # If the file is part of a package, run it from the target directory
    if [ -n "$PACKAGE_NAME" ]; then
        # Run the Java program with the fully qualified class name
        echo "Running $PACKAGE_NAME.$1..."
        java -cp "$TARGET_DIR" "$PACKAGE_NAME.$1"
    else
        # If there's no package, run the program directly
        echo "Running $1..."
        java -cp "$TARGET_DIR" "$1"
    fi
else
    echo "Compilation failed. Please check your code."
    exit 1
fi